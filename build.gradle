plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'maven-publish'
    id "org.sonarqube" version "2.7"
    id 'com.bmuschko.docker-spring-boot-application' version '6.4.0'
}

group = 'pl.itj.dev'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact("build/libs/todo-graphql-api-$version" + ".jar") {
                extension 'jar'
            }
        }
    }
    repositories {
        maven {
            name 'nexus'
            url "http://192.168.29.115:8081/repository/custom/"
            credentials {
                username "custom_repo"
                password "dev"
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'com.google.code.gson:gson:2.8.5'
    compile 'io.leangen.graphql:graphql-spqr-spring-boot-starter:0.0.4'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
}

import com.bmuschko.gradle.docker.tasks.image.Dockerfile

task createDockerfile(type: Dockerfile) {
    from 'openjdk:11'
    copyFile 'build/libs/todo-graphql-api-0.0.1-SNAPSHOT.jar', 'opt/todo-graphql-api'
    entryPoint 'java'
    defaultCommand '-jar', 'opt/todo-graphql-api/todo-graphql-api-0.0.1-SNAPSHOT.jar'
    exposePort 8080
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

task buildImage(type: DockerBuildImage) {
    dependsOn createDockerfile
    inputDir.set(new File("build/docker"))
}

test {
    useJUnitPlatform()
}
